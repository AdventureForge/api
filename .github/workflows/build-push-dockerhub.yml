# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AdventureForge_api
      
  adventure-service:
    runs-on: ubuntu-latest
    needs: [sonarcloud-analysis]
    env:
      IMAGE_NAME: adventureforge-adventureservice
    defaults:
      run:
        working-directory: spring-adventure-service 
    steps:
      - 
        name: checkout main
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - 
        name: Build module with Maven
        run: mvn -B package --file pom.xml
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get module version
        run: |
          export ADVENTURESERVICE_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "ADVENTURESERVICE_VERSION=$ADVENTURESERVICE_VERSION" >> $GITHUB_ENV
      -
        name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./spring-adventure-service
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.ADVENTURESERVICE_VERSION }}
          push: true
          
  config-server:
    runs-on: ubuntu-latest
    needs: [sonarcloud-analysis]
    env:
      IMAGE_NAME: adventureforge-configserver
    defaults:
      run:
        working-directory: spring-config-server 
    steps:
      - 
        name: checkout main
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - 
        name: Build module with Maven
        run: mvn -B package --file pom.xml
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get module version
        run: |
          export CONFIGSERVER_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "CONFIGSERVER_VERSION=$CONFIGSERVER_VERSION" >> $GITHUB_ENV
      -
        name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./spring-config-server
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.CONFIGSERVER_VERSION }}
          push: true
          
  eureka-server:
    runs-on: ubuntu-latest
    needs: [sonarcloud-analysis]
    env:
      IMAGE_NAME: adventureforge-eurekaserver
    defaults:
      run:
        working-directory: spring-eureka-server 
    steps:
      - 
        name: checkout main
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - 
        name: Build module with Maven
        run: mvn -B package --file pom.xml
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get module version
        run: |
          export EUREKASERVER_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "EUREKASERVER_VERSION=$EUREKASERVER_VERSION" >> $GITHUB_ENV
      -
        name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./spring-eureka-server
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.EUREKASERVER_VERSION }}
          push: true
          
  game-service:
    runs-on: ubuntu-latest
    needs: [sonarcloud-analysis]
    env:
      IMAGE_NAME: adventureforge-gameservice
    defaults:
      run:
        working-directory: spring-game-service 
    steps:
      - 
        name: checkout main
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - 
        name: Build module with Maven
        run: mvn -B package --file pom.xml
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get module version
        run: |
          export GAMESERVICE_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "GAMESERVICE_VERSION=$GAMESERVICE_VERSION" >> $GITHUB_ENV
      -
        name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./spring-game-service
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.GAMESERVICE_VERSION }}
          push: true

  gateway-server:
    runs-on: ubuntu-latest
    needs: [sonarcloud-analysis]
    env:
      IMAGE_NAME: adventureforge-gatewayserver
    defaults:
      run:
        working-directory: spring-gateway-server 
    steps:
      - 
        name: checkout main
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - 
        name: Build module with Maven
        run: mvn -B package --file pom.xml
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get module version
        run: |
          export GATEWAYSERVER_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "GATEWAYSERVER_VERSION=$GATEWAYSERVER_VERSION" >> $GITHUB_ENV
      -
        name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./spring-gateway-server
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.GATEWAYSERVER_VERSION }}
          push: true
          
  deploy-prod:
    runs-on: ubuntu-latest
    needs: [adventure-service,config-server,eureka-server,game-service,gateway-server]
    steps:
      -
        name: prepare deployment
        run: echo TODO DEPLOY SCRIPT
  
