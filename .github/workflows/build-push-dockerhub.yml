# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:

  # Sonarcloud job to analyse the full project
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    outputs:
      perform-deployment: ${{ steps.evaluate-need-for-deployment.outputs.deploy }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Check if service folder changed
        id: services_changed
        uses: dorny/paths-filter@v2
        with:
          filters: |
            dir1:
              - 'spring-adventure-service/**'
            dir2:
              - 'spring-config-server/**'
            dir3:
              - 'spring-eureka-server/**'
            dir4:
              - 'spring-game-service/**'
            dir5:
              - 'spring-gateway-server/**'

      - id: evaluate-need-for-deployment
        name: Evaluate need for deployment
        run: |
          if ${{ steps.services_changed.outputs.dir1 == 'true' || steps.services_changed.outputs.dir2 == 'true' ||steps.services_changed.outputs.dir3 == 'true' || steps.services_changed.outputs.dir4 == 'true' || steps.services_changed.outputs.dir5 == 'true' }};
          then
            echo "::set-output name=deploy::true"
          else
            echo "::set-output name=deploy::false"
          fi

      - name: Set up JDK 17
        if: steps.services_changed.outputs.dir1 == 'true' || steps.services_changed.outputs.dir2 == 'true' ||steps.services_changed.outputs.dir3 == 'true' || steps.services_changed.outputs.dir4 == 'true' || steps.services_changed.outputs.dir5 == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        if: steps.services_changed.outputs.dir1 == 'true' || steps.services_changed.outputs.dir2 == 'true' ||steps.services_changed.outputs.dir3 == 'true' || steps.services_changed.outputs.dir4 == 'true' || steps.services_changed.outputs.dir5 == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        if: steps.services_changed.outputs.dir1 == 'true' || steps.services_changed.outputs.dir2 == 'true' ||steps.services_changed.outputs.dir3 == 'true' || steps.services_changed.outputs.dir4 == 'true' || steps.services_changed.outputs.dir5 == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        if: steps.services_changed.outputs.dir1 == 'true' || steps.services_changed.outputs.dir2 == 'true' ||steps.services_changed.outputs.dir3 == 'true' || steps.services_changed.outputs.dir4 == 'true' || steps.services_changed.outputs.dir5 == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AdventureForge_api

  # Job for the microservice /spring-adventure-service
  adventure-service:
    runs-on: ubuntu-latest
    needs: [ sonarcloud-analysis ]
    env:
      IMAGE_NAME: adventureforge-adventureservice
      SERVICE_DIRECTORY: spring-adventure-service
    defaults:
      run:
        working-directory: ${{ env.SERVICE_DIRECTORY }}
    steps:
      - name: checkout main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if service folder changed
        id: service_changed
        uses: dorny/paths-filter@v2
        with:
          filters: |
            dir:
              - '${{ env.SERVICE_DIRECTORY }}/**'

      - name: Set up QEMU
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        if: steps.service_changed.outputs.dir == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build module with Maven
        if: steps.service_changed.outputs.dir == 'true'
        run: mvn -B package --file pom.xml

      - name: Login to DockerHub
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get module version
        if: steps.service_changed.outputs.dir == 'true'
        run: |
          export SERVICE_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "SERVICE_VERSION=$SERVICE_VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.SERVICE_DIRECTORY }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SERVICE_VERSION }}
          push: true


  config-server:
    runs-on: ubuntu-latest
    needs: [ sonarcloud-analysis ]
    env:
      IMAGE_NAME: adventureforge-configserver
      SERVICE_DIRECTORY: spring-config-server
    defaults:
      run:
        working-directory: ${{ env.SERVICE_DIRECTORY }}
    steps:
      - name: checkout main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if service folder changed
        id: service_changed
        uses: dorny/paths-filter@v2
        with:
          filters: |
            dir:
              - '${{ env.SERVICE_DIRECTORY }}/**'

      - name: Set up QEMU
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        if: steps.service_changed.outputs.dir == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build module with Maven
        if: steps.service_changed.outputs.dir == 'true'
        run: mvn -B package --file pom.xml

      - name: Login to DockerHub
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get module version
        if: steps.service_changed.outputs.dir == 'true'
        run: |
          export SERVICE_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "SERVICE_VERSION=$SERVICE_VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.SERVICE_DIRECTORY }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SERVICE_VERSION }}
          push: true


  eureka-server:
    runs-on: ubuntu-latest
    needs: [ sonarcloud-analysis ]
    env:
      IMAGE_NAME: adventureforge-eurekaserver
      SERVICE_DIRECTORY: spring-eureka-server
    defaults:
      run:
        working-directory: ${{ env.SERVICE_DIRECTORY }}
    steps:
      - name: checkout main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if service folder changed
        id: service_changed
        uses: dorny/paths-filter@v2
        with:
          filters: |
            dir:
              - '${{ env.SERVICE_DIRECTORY }}/**'

      - name: Set up QEMU
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        if: steps.service_changed.outputs.dir == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build module with Maven
        if: steps.service_changed.outputs.dir == 'true'
        run: mvn -B package --file pom.xml

      - name: Login to DockerHub
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get module version
        if: steps.service_changed.outputs.dir == 'true'
        run: |
          export SERVICE_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "SERVICE_VERSION=$SERVICE_VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.SERVICE_DIRECTORY }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SERVICE_VERSION }}
          push: true


  game-service:
    runs-on: ubuntu-latest
    needs: [ sonarcloud-analysis ]
    env:
      IMAGE_NAME: adventureforge-gameservice
      SERVICE_DIRECTORY: spring-game-service
    defaults:
      run:
        working-directory: ${{ env.SERVICE_DIRECTORY }}
    steps:
      - name: checkout main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if service folder changed
        id: service_changed
        uses: dorny/paths-filter@v2
        with:
          filters: |
            dir:
              - '${{ env.SERVICE_DIRECTORY }}/**'

      - name: Set up QEMU
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        if: steps.service_changed.outputs.dir == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build module with Maven
        if: steps.service_changed.outputs.dir == 'true'
        run: mvn -B package --file pom.xml

      - name: Login to DockerHub
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get module version
        if: steps.service_changed.outputs.dir == 'true'
        run: |
          export SERVICE_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "SERVICE_VERSION=$SERVICE_VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.SERVICE_DIRECTORY }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SERVICE_VERSION }}
          push: true


  gateway-server:
    runs-on: ubuntu-latest
    needs: [ sonarcloud-analysis ]
    env:
      IMAGE_NAME: adventureforge-gatewayserver
      SERVICE_DIRECTORY: spring-gateway-server
    defaults:
      run:
        working-directory: ${{ env.SERVICE_DIRECTORY }}
    steps:
      - name: checkout main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if service folder changed
        id: service_changed
        uses: dorny/paths-filter@v2
        with:
          filters: |
            dir:
              - '${{ env.SERVICE_DIRECTORY }}/**'

      - name: Set up QEMU
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        if: steps.service_changed.outputs.dir == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build module with Maven
        if: steps.service_changed.outputs.dir == 'true'
        run: mvn -B package --file pom.xml

      - name: Login to DockerHub
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get module version
        if: steps.service_changed.outputs.dir == 'true'
        run: |
          export SERVICE_VERSION=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.version}' \
          --non-recursive \
          exec:exec)
          echo "SERVICE_VERSION=$SERVICE_VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: steps.service_changed.outputs.dir == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.SERVICE_DIRECTORY }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SERVICE_VERSION }}
          push: true


  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ adventure-service,config-server,eureka-server,game-service,gateway-server ]
    steps:
      - name: prepare deployment
        run: echo TODO DEPLOY SCRIPT
  
