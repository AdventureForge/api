version: "3.8"
services:

  configserver:
    image: morganlmd/spring-config-server:0.0.1-SNAPSHOT
    ports:
      - "8888:8888"
    networks:
      backend:
        aliases:
          - "configserver"

  eurekaserver:
    image: morganlmd/spring-eureka-server:0.0.1-SNAPSHOT
    ports:
      - "8761:8761"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://configserver:8888
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"


  gatewayserver:
    image: morganlmd/spring-gateway-server:0.0.1-SNAPSHOT
    ports:
      - "8890:8890"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://configserver:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"

  game-service:
    image: "morganlmd/gameservice:0.0.1-SNAPSHOT"
    container_name: "game-service"
    ports:
      - "9001:9001"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://configserver:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/adventureforgedb
      #- SPRING_PROFILES_ACTIVE=testdata
      #- LOGGING_LEVEL=DEBUG
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      - backend

  adventure-service:
    image: "morganlmd/adventureservice:0.0.1-SNAPSHOT"
    container_name: "adventure-service"
    ports:
      - "9002:9002"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://configserver:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/adventureforgedb
      #- SPRING_PROFILES_ACTIVE=testdata
      #- LOGGING_LEVEL=DEBUG
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      - backend

  database:
    image: "postgres:latest"
    container_name: "adventureforge-postgres"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  backend:
    driver: bridge